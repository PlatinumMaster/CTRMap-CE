package ctrmap.creativestudio.dialogs;

import ctrmap.renderer.scene.animation.skeletal.SkeletalBoneTransform;
import ctrmap.renderer.util.camcvt.Skel2CamScalarSource;
import ctrmap.renderer.util.camcvt.Skel2CamSource;
import ctrmap.renderer.util.camcvt.Skel2CamVectorSource;
import ctrmap.renderer.util.camcvt.SkeletalVectorType;
import java.util.List;
import javax.swing.JComboBox;

public class Skel2CamSourcePanel extends javax.swing.JPanel {

	private static final String[][] COMPONENTS = new String[][] {
		{"X", "Y", "Z"},
		{"XYZ"},
	};
	
	private static final String[][] OPERATIONS = new String[][] {
		{"As is", "Inverted", "Minus Pi/2", "Plus Pi/2"},
		{"As is", "Rot. X -Pi/2", "Rot. X +Pi/2"},
	};
	
	private static final int LUTIDX_NONVEC = 0;
	private static final int LUTIDX_VEC = 1;
	
	/**
	 * Creates new form Skel2CamSourcePanel
	 */
	public Skel2CamSourcePanel() {
		initComponents();
	}
	
	public void setIsVector(boolean isVector) {
		int lutIdx = isVector ? LUTIDX_VEC : LUTIDX_NONVEC;
		loadCB(compBox, COMPONENTS[lutIdx]);
		loadCB(opBox, OPERATIONS[lutIdx]);
	}
	
	public void loadJoints(List<SkeletalBoneTransform> bones) {
		jntBox.removeAllItems();
		for (SkeletalBoneTransform bt : bones) {
			jntBox.addItem(bt.name);
		}
	}
	
	private void loadCB(JComboBox cb, String[] values) {
		cb.removeAllItems();
		for (String val : values) {
			cb.addItem(val);;
		}
	}
	
	public Skel2CamVectorSource getVectorSource() {
		Skel2CamVectorSource src = new Skel2CamVectorSource();
		src.jntName = (String)jntBox.getSelectedItem();
		src.jntVec = SkeletalVectorType.values()[vecBox.getSelectedIndex()];
		src.op = Skel2CamVectorSource.Skel2CamVectorOp.values()[opBox.getSelectedIndex()];
		return src;
	}
	
	public Skel2CamScalarSource getScalarSource() {
		Skel2CamScalarSource src = new Skel2CamScalarSource();
		src.jntName = (String)jntBox.getSelectedItem();
		src.jntVec = SkeletalVectorType.values()[vecBox.getSelectedIndex()];
		src.op = Skel2CamScalarSource.Skel2CamScalarOp.values()[opBox.getSelectedIndex()];
		src.comp = Skel2CamScalarSource.Skel2CamScalarComp.values()[compBox.getSelectedIndex()];
		return src;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jntBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        vecBox = new javax.swing.JComboBox<>();
        opBox = new javax.swing.JComboBox<>();

        jLabel1.setText("component(s) of joint");

        jntBox.setMaximumRowCount(25);

        jLabel2.setText("'s");

        vecBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Translation", "Rotation", "Scale" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(compBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jntBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vecBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(opBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(compBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1)
                .addComponent(jntBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(vecBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(opBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> compBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> jntBox;
    private javax.swing.JComboBox<String> opBox;
    private javax.swing.JComboBox<String> vecBox;
    // End of variables declaration//GEN-END:variables
}
