package ctrmap.creativestudio.dialogs;

import ctrmap.renderer.scene.model.Model;
import xstandard.gui.DialogOptionRemember;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

public class SMDExportDialog extends javax.swing.JDialog {

	private CSSMDExportSettings result = null;

	public SMDExportDialog(java.awt.Frame parent, boolean modal, List<Model> models) {
		super(parent, modal);
		initComponents();
		setLocationRelativeTo(parent);

		DialogOptionRemember.setRememberedCheckbox(btnIsExportTex);
		DialogOptionRemember.setRememberedCheckbox(btnSeparateTex);
		DialogOptionRemember.selectRememberedRBtnPos(mdlExportTypeGroup);

		btnMdlExportOne.setSelected(btnMdlExportOne.isSelected() && !models.isEmpty());

		setTexUI();
		setMdlUI();

		ActionListener mdlUIListener = new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				setMdlUI();
			}
		};

		btnMdlExportAllAsOne.addActionListener(mdlUIListener);
		btnMdlExportOne.addActionListener(mdlUIListener);

		mdlSelect.loadModels(models);
	}

	public CSSMDExportSettings getResult() {
		return result;
	}

	private void setTexUI() {
		btnSeparateTex.setEnabled(btnIsExportTex.isSelected());
	}

	private void setMdlUI() {
		mdlSelect.setModelBoxEnabled(btnMdlExportOne.isSelected());
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mdlExportTypeGroup = new javax.swing.ButtonGroup();
        btnSeparateTex = new javax.swing.JCheckBox();
        btnExport = new javax.swing.JButton();
        btnIsExportTex = new javax.swing.JCheckBox();
        mdlExportTypeLabel = new javax.swing.JLabel();
        btnMdlExportAllAsOne = new javax.swing.JRadioButton();
        btnMdlExportOne = new javax.swing.JRadioButton();
        mdlSelect = new ctrmap.creativestudio.dialogs.ModelSelectionPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export SMD");
        setResizable(false);

        btnSeparateTex.setText("Separate texture directory");

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnIsExportTex.setSelected(true);
        btnIsExportTex.setText("Export textures");
        btnIsExportTex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsExportTexActionPerformed(evt);
            }
        });

        mdlExportTypeLabel.setText("Export...");

        mdlExportTypeGroup.add(btnMdlExportAllAsOne);
        btnMdlExportAllAsOne.setText("All models as one");

        mdlExportTypeGroup.add(btnMdlExportOne);
        btnMdlExportOne.setText("Single model");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mdlExportTypeLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnSeparateTex))
                    .addComponent(btnIsExportTex)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMdlExportOne)
                            .addComponent(btnMdlExportAllAsOne)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(mdlSelect, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExport)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mdlExportTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMdlExportAllAsOne)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMdlExportOne)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mdlSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnIsExportTex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSeparateTex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnExport)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
		DialogOptionRemember.putRememberedCheckbox(btnIsExportTex);
		DialogOptionRemember.putRememberedCheckbox(btnSeparateTex);
		DialogOptionRemember.putRememberedRBtnPos(mdlExportTypeGroup);

		result = new CSSMDExportSettings();
		result.exportTextures = btnIsExportTex.isSelected();
		result.separateTextures = btnSeparateTex.isSelected();

		if (btnMdlExportOne.isSelected()) {
			result.models.add(mdlSelect.getSelectedModel());
		} else {
			result.models.addAll(mdlSelect.getAllModels());
		}

		dispose();
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnIsExportTexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsExportTexActionPerformed
		setTexUI();
    }//GEN-LAST:event_btnIsExportTexActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JCheckBox btnIsExportTex;
    private javax.swing.JRadioButton btnMdlExportAllAsOne;
    private javax.swing.JRadioButton btnMdlExportOne;
    private javax.swing.JCheckBox btnSeparateTex;
    private javax.swing.ButtonGroup mdlExportTypeGroup;
    private javax.swing.JLabel mdlExportTypeLabel;
    private ctrmap.creativestudio.dialogs.ModelSelectionPanel mdlSelect;
    // End of variables declaration//GEN-END:variables

	public static class CSSMDExportSettings {

		public boolean exportTextures;
		public boolean separateTextures;
		public List<Model> models = new ArrayList<>();
	}
}
