package ctrmap.creativestudio.editors;

import ctrmap.creativestudio.ngcs.tree.CSNode;
import ctrmap.renderer.scene.Camera;
import ctrmap.renderer.scene.metadata.ReservedMetaData;
import xstandard.gui.components.ComponentUtils;

public class CameraEditor extends javax.swing.JPanel implements IEditor {

	public CameraEditor() {
		initComponents();
		saveCtrl.setCallback(new Runnable() {
			@Override
			public void run() {
				save();
			}
		});
		ComponentUtils.setNFValueClass(Float.class, zNear, zFar, fov);
	}

	private Camera cam;
	private CSNode node;
	
	@Override
	public void handleObject(Object o) {
		if (IEditor.checkIsCompatibleNG(o, Camera.class)){
			node = (CSNode)o;
			cam = (Camera)node.getContent();
			showCam();
		}
		else {
			cam = null;
			ComponentUtils.clearComponents(fov, zNear, zFar, nameField, camType);
		}
	}

	public void showCam(){
		if (cam != null){
			nameField.setText(cam.name);
			int camIndex = cam.mode == Camera.Mode.LOOKAT ? 1 : 0;
			if (ReservedMetaData.isLookAtAsAim(cam)) {
				camIndex = 2;
			}
			camType.setSelectedIndex(camIndex);
			zNear.setValue(cam.zNear);
			zFar.setValue(cam.zFar);
			fov.setValue(cam.FOV);
		}
	}
	
	public void saveCam(){
		if (cam != null){
			cam.name = nameField.getText();
			switch (camType.getSelectedIndex()) {
				case 0:
					cam.metaData.putValue(ReservedMetaData.CAM_LOOKAT_AS_AIM, 0);
					cam.mode = Camera.Mode.PERSPECTIVE;
					break;
				case 2:
					cam.metaData.putValue(ReservedMetaData.CAM_LOOKAT_AS_AIM, 1);
					cam.mode = Camera.Mode.LOOKAT;
					break;
				case 1:
					cam.metaData.putValue(ReservedMetaData.CAM_LOOKAT_AS_AIM, 0);
					cam.mode = Camera.Mode.LOOKAT;
					break;
			}
			cam.zNear = (Float)zNear.getValue();
			cam.zFar = (Float)zFar.getValue();
			cam.FOV = (Float)fov.getValue();
			node.updateThis();
		}
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        camNamePanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        saveCtrl = new ctrmap.creativestudio.editors.SaveControlPanel();
        camPanel = new javax.swing.JPanel();
        cameTypeLabel = new javax.swing.JLabel();
        camType = new javax.swing.JComboBox<>();
        fovLabel = new javax.swing.JLabel();
        fov = new javax.swing.JFormattedTextField();
        clippingLabel = new javax.swing.JLabel();
        zNearLabel = new javax.swing.JLabel();
        zNear = new javax.swing.JFormattedTextField();
        zFarLabel = new javax.swing.JLabel();
        zFar = new javax.swing.JFormattedTextField();

        camNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));

        nameField.setText("<N/A>");

        javax.swing.GroupLayout camNamePanelLayout = new javax.swing.GroupLayout(camNamePanel);
        camNamePanel.setLayout(camNamePanelLayout);
        camNamePanelLayout.setHorizontalGroup(
            camNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        camNamePanelLayout.setVerticalGroup(
            camNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        camPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera"));

        cameTypeLabel.setText("Type");

        camType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Perspective", "Look At", "Look At (Aim)" }));

        fovLabel.setText("FOV");

        fov.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        clippingLabel.setText("Clipping");

        zNearLabel.setText("Near");

        zNear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        zFarLabel.setText("Far");

        zFar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout camPanelLayout = new javax.swing.GroupLayout(camPanel);
        camPanel.setLayout(camPanelLayout);
        camPanelLayout.setHorizontalGroup(
            camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cameTypeLabel)
                    .addComponent(fovLabel)
                    .addComponent(clippingLabel)
                    .addGroup(camPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(camType, 0, 128, Short.MAX_VALUE)
                            .addComponent(fov)
                            .addGroup(camPanelLayout.createSequentialGroup()
                                .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zNearLabel)
                                    .addComponent(zFarLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zFar)
                                    .addComponent(zNear))))))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        camPanelLayout.setVerticalGroup(
            camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(camPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cameTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(camType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fovLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clippingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zNearLabel)
                    .addComponent(zNear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(camPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zFarLabel)
                    .addComponent(zFar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(camNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveCtrl, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addComponent(camPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(camNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(camPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveCtrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel camNamePanel;
    private javax.swing.JPanel camPanel;
    private javax.swing.JComboBox<String> camType;
    private javax.swing.JLabel cameTypeLabel;
    private javax.swing.JLabel clippingLabel;
    private javax.swing.JFormattedTextField fov;
    private javax.swing.JLabel fovLabel;
    private javax.swing.JTextField nameField;
    private ctrmap.creativestudio.editors.SaveControlPanel saveCtrl;
    private javax.swing.JFormattedTextField zFar;
    private javax.swing.JLabel zFarLabel;
    private javax.swing.JFormattedTextField zNear;
    private javax.swing.JLabel zNearLabel;
    // End of variables declaration//GEN-END:variables

	@Override
	public void save() {
		saveCam();
	}
}
