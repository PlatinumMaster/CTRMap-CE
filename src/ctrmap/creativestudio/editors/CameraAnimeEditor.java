package ctrmap.creativestudio.editors;

import ctrmap.creativestudio.ngcs.NGCS;
import ctrmap.creativestudio.ngcs.tree.CSNode;
import ctrmap.renderer.scene.animation.camera.CameraAnimation;
import ctrmap.renderer.scene.animation.camera.CameraBoneTransform;
import ctrmap.renderer.scene.animation.camera.CameraViewpointBoneTransform;
import ctrmap.renderer.scene.metadata.ReservedMetaData;
import ctrmap.renderer.util.AnimeProcessor;
import ctrmap.renderer.util.CameraFrameProcessor;
import xstandard.gui.DialogUtils;
import xstandard.gui.components.ComponentUtils;

public class CameraAnimeEditor extends javax.swing.JPanel implements IEditor {

	/**
	 * Creates new form SkeletalEditor
	 */
	public CameraAnimeEditor() {
		initComponents();
		
		ComponentUtils.setNFValueClass(Float.class, tempo);
	}
	
	private CSNode node;
	private CameraAnimation anime;

	@Override
	public void handleObject(Object o) {
		reload();
		if (IEditor.checkIsCompatibleNG(o, CameraAnimation.class)){
			node = (CSNode)o;
			anime = (CameraAnimation) node.getContent();
			btnIsLookatAsAim.setSelected(ReservedMetaData.isLookAtAsAim(anime));
			general.loadAnime(anime, node);
		}
		else {
			node = null;
			anime = null;
			btnIsLookatAsAim.setSelected(false);
			general.loadAnime(null, node);
		}
	}

	@Override
	public void save() {
		//Nothing else. We want the user to explicitly carry out the irreversible operations with "Apply".
	}
	
	public void reload(){
		tempo.setValue(1f);
		optResult.setText("--");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tempoPanel = new javax.swing.JPanel();
        tempo = new javax.swing.JFormattedTextField();
        btnApplyTempo = new javax.swing.JButton();
        optPanel = new javax.swing.JPanel();
        btnOptKeyframes = new javax.swing.JButton();
        optResult = new javax.swing.JLabel();
        btnWholeFrames = new javax.swing.JButton();
        toolsPanel = new javax.swing.JPanel();
        btnCam2Skel = new javax.swing.JButton();
        btnMakeLookat = new javax.swing.JButton();
        general = new ctrmap.creativestudio.editors.AnimeGeneralEditor();
        serializeMetaPanel = new javax.swing.JPanel();
        btnIsLookatAsAim = new javax.swing.JCheckBox();

        tempoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tempo"));

        tempo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));

        btnApplyTempo.setText("Apply");
        btnApplyTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyTempoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tempoPanelLayout = new javax.swing.GroupLayout(tempoPanel);
        tempoPanel.setLayout(tempoPanelLayout);
        tempoPanelLayout.setHorizontalGroup(
            tempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tempo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tempoPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnApplyTempo)))
                .addContainerGap())
        );
        tempoPanelLayout.setVerticalGroup(
            tempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tempoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApplyTempo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        optPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Optimization"));

        btnOptKeyframes.setText("Remove redundant keyframes");
        btnOptKeyframes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOptKeyframesActionPerformed(evt);
            }
        });

        optResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        optResult.setText("--");

        btnWholeFrames.setText("Make keyframes integers");
        btnWholeFrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWholeFramesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optPanelLayout = new javax.swing.GroupLayout(optPanel);
        optPanel.setLayout(optPanelLayout);
        optPanelLayout.setHorizontalGroup(
            optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optPanelLayout.createSequentialGroup()
                .addGroup(optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(optPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnOptKeyframes, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                    .addComponent(optResult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(optPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnWholeFrames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        optPanelLayout.setVerticalGroup(
            optPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOptKeyframes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWholeFrames)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        toolsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tools"));

        btnCam2Skel.setText("Create Skeletal animation");
        btnCam2Skel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCam2SkelActionPerformed(evt);
            }
        });

        btnMakeLookat.setText("Convert to LookAt");
        btnMakeLookat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeLookatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolsPanelLayout = new javax.swing.GroupLayout(toolsPanel);
        toolsPanel.setLayout(toolsPanelLayout);
        toolsPanelLayout.setHorizontalGroup(
            toolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCam2Skel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMakeLookat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        toolsPanelLayout.setVerticalGroup(
            toolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCam2Skel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMakeLookat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        serializeMetaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Serialization metadata"));

        btnIsLookatAsAim.setText("SPICA/Write LookAt as Aim");
        btnIsLookatAsAim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsLookatAsAimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout serializeMetaPanelLayout = new javax.swing.GroupLayout(serializeMetaPanel);
        serializeMetaPanel.setLayout(serializeMetaPanelLayout);
        serializeMetaPanelLayout.setHorizontalGroup(
            serializeMetaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serializeMetaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIsLookatAsAim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(127, 127, 127))
        );
        serializeMetaPanelLayout.setVerticalGroup(
            serializeMetaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serializeMetaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIsLookatAsAim)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(toolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(general, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serializeMetaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(general, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serializeMetaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyTempoActionPerformed
		if (anime != null){
			float v = 1f / (Float)tempo.getValue();
			if (v != 0){
				AnimeProcessor.applyTempoScale(anime, v);
			}
			tempo.setValue(1f);
		}
    }//GEN-LAST:event_btnApplyTempoActionPerformed

    private void btnOptKeyframesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptKeyframesActionPerformed
		if (anime != null){
			int rsl = AnimeProcessor.optimizeCmaKeyframes(anime);
			optResult.setText("Optimized out " + rsl + " keyframes!");
		}
    }//GEN-LAST:event_btnOptKeyframesActionPerformed

    private void btnWholeFramesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWholeFramesActionPerformed
		if (anime != null){
			AnimeProcessor.makeAnimeWholeFrames(anime);
		}
    }//GEN-LAST:event_btnWholeFramesActionPerformed

    private void btnCam2SkelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCam2SkelActionPerformed
		if (anime != null){
			NGCS cs = node.getCS();
			
		}
    }//GEN-LAST:event_btnCam2SkelActionPerformed

    private void btnMakeLookatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeLookatActionPerformed
		if (anime != null) {
			int convCount = 0;
			for (int i = 0; i < anime.transforms.size(); i++) {
				CameraBoneTransform bt = anime.transforms.get(i);
				if (bt instanceof CameraViewpointBoneTransform) {
					anime.transforms.set(i, CameraFrameProcessor.viewpointToLookat((CameraViewpointBoneTransform)bt, anime.frameCount));
					convCount++;
				}
			}
			DialogUtils.showInfoMessage(node.getCS(), "Finished", "Converted " + convCount + " camera transforms!");
		}
    }//GEN-LAST:event_btnMakeLookatActionPerformed

    private void btnIsLookatAsAimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsLookatAsAimActionPerformed
		if (anime != null) {
			anime.metaData.putValue(ReservedMetaData.CAM_LOOKAT_AS_AIM, btnIsLookatAsAim.isSelected() ? 1 : 0);
		}
    }//GEN-LAST:event_btnIsLookatAsAimActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyTempo;
    private javax.swing.JButton btnCam2Skel;
    private javax.swing.JCheckBox btnIsLookatAsAim;
    private javax.swing.JButton btnMakeLookat;
    private javax.swing.JButton btnOptKeyframes;
    private javax.swing.JButton btnWholeFrames;
    private ctrmap.creativestudio.editors.AnimeGeneralEditor general;
    private javax.swing.JPanel optPanel;
    private javax.swing.JLabel optResult;
    private javax.swing.JPanel serializeMetaPanel;
    private javax.swing.JFormattedTextField tempo;
    private javax.swing.JPanel tempoPanel;
    private javax.swing.JPanel toolsPanel;
    // End of variables declaration//GEN-END:variables
}
