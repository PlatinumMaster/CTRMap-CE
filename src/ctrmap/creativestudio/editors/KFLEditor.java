package ctrmap.creativestudio.editors;

import ctrmap.renderer.scene.animation.KeyFrame;
import xstandard.gui.components.ComponentUtils;
import xstandard.gui.components.listeners.DocumentAdapterEx;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.ListSelectionEvent;

public class KFLEditor extends javax.swing.JPanel {

	/**
	 * Creates new form KFLEditor
	 */
	private DefaultListModel<String> kflModel = new DefaultListModel<>();

	private KeyFrame currentKF = null;
	private int currentKFIndex = -1;

	private boolean loaded = false;

	public KFLEditor() {
		initComponents();

		kfList.setModel(kflModel);
		ComponentUtils.setNFValueClass(Float.class, frame, value, inSlope, outSlope);

		frame.getDocument().addDocumentListener(new DocumentAdapterEx() {
			@Override
			public void textChangedUpdate(DocumentEvent e) {
				if (currentKF != null) {
					currentKF.frame = ComponentUtils.getFloatFromDocument(frame, currentKF.frame);
					updateKFInfo(currentKFIndex);
				}
			}
		});

		value.getDocument().addDocumentListener(new DocumentAdapterEx() {
			@Override
			public void textChangedUpdate(DocumentEvent e) {
				if (currentKF != null) {
					currentKF.value = ComponentUtils.getFloatFromDocument(value, currentKF.value);
					updateKFInfo(currentKFIndex);
				}
			}
		});

		inSlope.getDocument().addDocumentListener(new DocumentAdapterEx() {
			@Override
			public void textChangedUpdate(DocumentEvent e) {
				if (currentKF != null) {
					currentKF.inSlope = ComponentUtils.getFloatFromDocument(inSlope, currentKF.inSlope);
				}
			}
		});

		outSlope.getDocument().addDocumentListener(new DocumentAdapterEx() {
			@Override
			public void textChangedUpdate(DocumentEvent e) {
				if (currentKF != null) {
					currentKF.outSlope = ComponentUtils.getFloatFromDocument(outSlope, currentKF.outSlope);
				}
			}
		});

		kfList.addListSelectionListener((ListSelectionEvent e) -> {
			if (!e.getValueIsAdjusting() && loaded) {
				showKF(kfList.getSelectedIndex());
			}
		});
	}

	private List<KeyFrame> kfl = new ArrayList<>();

	public void loadKFL(List<KeyFrame> kfl) {
		if (kfl != null) {
			this.kfl = kfl;
		}
		else {
			kfl = new ArrayList<>();
		}
		rebuildKFLModel();
		kfList.setSelectedIndex(0);
	}

	public void rebuildKFLModel() {
		loaded = false;
		kflModel.clear();

		for (KeyFrame kf : kfl) {
			kflModel.addElement(getKFLFVStr(kf));
		}
		loaded = true;
	}

	private static String getKFLFVStr(KeyFrame kf) {
		return (int) kf.frame + ": " + kf.value;
	}

	public void addKF() {
		KeyFrame lastFrame;
		if (!kfl.isEmpty()) {
			lastFrame = kfl.get(kfl.size() - 1);
		} else {
			lastFrame = new KeyFrame(-1, 0, 0, 0, KeyFrame.InterpolationMethod.LINEAR);
		}
		KeyFrame kf = new KeyFrame(lastFrame.frame + 1, lastFrame.value, 0, 0, lastFrame.interpolation);
		kflModel.addElement(getKFLFVStr(kf));
		kfl.add(kf);
		kfList.setSelectedIndex(kfl.size() - 1);
	}

	public void removeKF() {
		int idx = kfList.getSelectedIndex();
		if (idx != -1) {
			kflModel.remove(idx);
			kfl.remove(idx);
			if (!kfl.isEmpty()) {
				int newIdx = Math.max(0, Math.min(idx, kfl.size() - 1));
				kfList.setSelectedIndex(newIdx);
			} else {
				kfList.setSelectedIndex(-1);
			}
		}
	}

	public void updateKFInfo(int index) {
		kflModel.setElementAt(getKFLFVStr(kfl.get(index)), index);
	}

	public void showKF(int index) {
		if (index == -1 || index >= kfl.size()) {
			currentKF = null;
			currentKFIndex = -1;
			ComponentUtils.clearComponents(frame, value, inSlope, outSlope);
		} else {
			KeyFrame kf = kfl.get(index);
			currentKFIndex = index;
			currentKF = kf;
			frame.setValue(kf.frame);
			value.setValue(kf.value);
			inSlope.setValue(kf.inSlope);
			outSlope.setValue(kf.outSlope);
			interp.setSelectedIndex(kf.interpolation.ordinal());
			setInterpDependantEnabled();
		}
	}

	public void setInterpDependantEnabled() {
		if (currentKF != null) {
			currentKF.interpolation = KeyFrame.InterpolationMethod.values()[interp.getSelectedIndex()];
		}
		ComponentUtils.setComponentsEnabled(interp.getSelectedIndex() == KeyFrame.InterpolationMethod.HERMITE.ordinal(), inSlope, outSlope);
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kfListSP = new javax.swing.JScrollPane();
        kfList = new javax.swing.JList<>();
        frameLabel = new javax.swing.JLabel();
        frame = new javax.swing.JFormattedTextField();
        valueLabel = new javax.swing.JLabel();
        value = new javax.swing.JFormattedTextField();
        interpLabel = new javax.swing.JLabel();
        interp = new javax.swing.JComboBox<>();
        slopeLabel = new javax.swing.JLabel();
        inSlopeLabel = new javax.swing.JLabel();
        outSlopeLabel = new javax.swing.JLabel();
        outSlope = new javax.swing.JFormattedTextField();
        inSlope = new javax.swing.JFormattedTextField();
        btnAddKF = new javax.swing.JButton();
        btnRemoveKF = new javax.swing.JButton();

        kfList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        kfListSP.setViewportView(kfList);

        frameLabel.setText("Frame");

        frame.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        valueLabel.setText("Value");

        value.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0000"))));

        interpLabel.setText("Interpolation");

        interp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Step", "Linear", "Hermite" }));
        interp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interpActionPerformed(evt);
            }
        });

        slopeLabel.setText("Slope");

        inSlopeLabel.setText("In");

        outSlopeLabel.setText("Out");

        outSlope.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0000"))));

        inSlope.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.0000"))));

        btnAddKF.setText("+");
        btnAddKF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddKFActionPerformed(evt);
            }
        });

        btnRemoveKF.setText("-");
        btnRemoveKF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveKFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kfListSP, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddKF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveKF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inSlopeLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(inSlope, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(outSlopeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(outSlope, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))))
                            .addComponent(interp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(interpLabel)
                                    .addComponent(slopeLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))
                    .addComponent(value)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(frameLabel)
                            .addComponent(valueLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(frame)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(frameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(frame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(interpLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(interp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slopeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inSlopeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(outSlopeLabel)
                            .addComponent(outSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(kfListSP, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddKF)
                    .addComponent(btnRemoveKF)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddKFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddKFActionPerformed
		addKF();
    }//GEN-LAST:event_btnAddKFActionPerformed

    private void btnRemoveKFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveKFActionPerformed
		removeKF();
    }//GEN-LAST:event_btnRemoveKFActionPerformed

    private void interpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interpActionPerformed
		setInterpDependantEnabled();
    }//GEN-LAST:event_interpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddKF;
    private javax.swing.JButton btnRemoveKF;
    private javax.swing.JFormattedTextField frame;
    private javax.swing.JLabel frameLabel;
    private javax.swing.JFormattedTextField inSlope;
    private javax.swing.JLabel inSlopeLabel;
    private javax.swing.JComboBox<String> interp;
    private javax.swing.JLabel interpLabel;
    private javax.swing.JList<String> kfList;
    private javax.swing.JScrollPane kfListSP;
    private javax.swing.JFormattedTextField outSlope;
    private javax.swing.JLabel outSlopeLabel;
    private javax.swing.JLabel slopeLabel;
    private javax.swing.JFormattedTextField value;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
