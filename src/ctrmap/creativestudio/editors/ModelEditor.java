package ctrmap.creativestudio.editors;

import ctrmap.creativestudio.ngcs.NGCS;
import ctrmap.creativestudio.ngcs.tree.CSNode;
import ctrmap.renderer.scene.model.Joint;
import ctrmap.renderer.scene.model.Mesh;
import ctrmap.renderer.scene.model.Model;
import ctrmap.renderer.scene.model.PrimitiveType;
import ctrmap.renderer.scene.model.Vertex;
import ctrmap.renderer.scene.texturing.Material;
import ctrmap.renderer.scenegraph.G3DResource;
import ctrmap.renderer.util.MaterialProcessor;
import ctrmap.renderer.util.MeshProcessor;
import ctrmap.renderer.util.ModelProcessor;
import ctrmap.renderer.util.PrimitiveConverter;
import ctrmap.renderer.util.QuadstripConverter;
import ctrmap.renderer.util.TristripConverter;
import ctrmap.renderer.util.VBOProcessor;
import xstandard.gui.DialogUtils;
import xstandard.gui.components.ComponentUtils;
import xstandard.math.vec.Vec3f;
import xstandard.util.ListenableList;

public class ModelEditor extends javax.swing.JPanel implements IEditor {

	/**
	 * Creates new form SkeletalEditor
	 */
	public ModelEditor() {
		initComponents();

		ComponentUtils.setNFValueClass(Float.class, scale, tx, ty, tz);
	}

	private CSNode node;
	private Model model;

	@Override
	public void handleObject(Object o) {
		reload();
		if (IEditor.checkIsCompatibleNG(o, Model.class)) {
			node = (CSNode) o;
			model = (Model) node.getContent();
			nameField.setText(model.name);
		} else {
			node = null;
			model = null;
		}
	}

	@Override
	public void save() {
		if (model != null && node != null) {
			String name = nameField.getText();
			model.setName(name);
			node.updateThis();
		}
		//Nothing else. We want the user to explicitly carry out the irreversible operations with "Apply".
	}

	public void reload() {
		scale.setValue(1f);
		tx.setValue(0f);
		ty.setValue(0f);
		tz.setValue(0f);
		nameField.setText(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
	 * code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scalePanel = new javax.swing.JPanel();
        scale = new javax.swing.JFormattedTextField();
        btnApplyScale = new javax.swing.JButton();
        namePanel = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        btnNameSet = new javax.swing.JButton();
        translatePanel = new javax.swing.JPanel();
        tx = new javax.swing.JFormattedTextField();
        ty = new javax.swing.JFormattedTextField();
        tz = new javax.swing.JFormattedTextField();
        txLabel = new javax.swing.JLabel();
        tyLabel = new javax.swing.JLabel();
        tzLabel = new javax.swing.JLabel();
        btnApplyTranslate = new javax.swing.JButton();
        miscPanel = new javax.swing.JPanel();
        btnVColToAlpha = new javax.swing.JButton();
        btnCreateVCol = new javax.swing.JButton();
        btnMakeRootJoint = new javax.swing.JButton();
        btnMakeStrips = new javax.swing.JButton();
        btnAlphaBlendByTexture = new javax.swing.JButton();
        btnCalcTangents = new javax.swing.JButton();
        tgtCalcUVSetLabel = new javax.swing.JLabel();
        tgtCalcUVSet = new javax.swing.JSpinner();
        btnMakeIndexed = new javax.swing.JButton();

        scalePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Scale"));

        scale.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));

        btnApplyScale.setText("Apply");
        btnApplyScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyScaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scalePanelLayout = new javax.swing.GroupLayout(scalePanel);
        scalePanel.setLayout(scalePanelLayout);
        scalePanelLayout.setHorizontalGroup(
            scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scale)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scalePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnApplyScale)))
                .addContainerGap())
        );
        scalePanelLayout.setVerticalGroup(
            scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApplyScale)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        namePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));

        btnNameSet.setText("Set");
        btnNameSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNameSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout namePanelLayout = new javax.swing.GroupLayout(namePanel);
        namePanel.setLayout(namePanelLayout);
        namePanelLayout.setHorizontalGroup(
            namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, namePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNameSet)))
                .addContainerGap())
        );
        namePanelLayout.setVerticalGroup(
            namePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNameSet)
                .addContainerGap())
        );

        translatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Translate"));

        tx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        ty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        tz.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        txLabel.setForeground(new java.awt.Color(255, 0, 0));
        txLabel.setText("X");

        tyLabel.setForeground(new java.awt.Color(0, 153, 0));
        tyLabel.setText("Y");

        tzLabel.setForeground(new java.awt.Color(0, 0, 255));
        tzLabel.setText("Z");

        btnApplyTranslate.setText("Apply");
        btnApplyTranslate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyTranslateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout translatePanelLayout = new javax.swing.GroupLayout(translatePanel);
        translatePanel.setLayout(translatePanelLayout);
        translatePanelLayout.setHorizontalGroup(
            translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(translatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txLabel)
                    .addComponent(tyLabel)
                    .addComponent(tzLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tx, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ty, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tz, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, translatePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplyTranslate)
                .addContainerGap())
        );
        translatePanelLayout.setVerticalGroup(
            translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(translatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tzLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplyTranslate)
                .addContainerGap())
        );

        miscPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Misc"));

        btnVColToAlpha.setText("Vertex color -> Alpha (all meshes)");
        btnVColToAlpha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVColToAlphaActionPerformed(evt);
            }
        });

        btnCreateVCol.setText("Create/clear color layer (all meshes)");
        btnCreateVCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateVColActionPerformed(evt);
            }
        });

        btnMakeRootJoint.setText("Create root bone");
        btnMakeRootJoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeRootJointActionPerformed(evt);
            }
        });

        btnMakeStrips.setText("Create strip primitives");
        btnMakeStrips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeStripsActionPerformed(evt);
            }
        });

        btnAlphaBlendByTexture.setText("Automatic transparency (all materials)");
        btnAlphaBlendByTexture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlphaBlendByTextureActionPerformed(evt);
            }
        });

        btnCalcTangents.setText("Recalculate tangents");
        btnCalcTangents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcTangentsActionPerformed(evt);
            }
        });

        tgtCalcUVSetLabel.setText("UV set:");

        tgtCalcUVSet.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2, 1));

        btnMakeIndexed.setText("Make indexed");
        btnMakeIndexed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeIndexedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout miscPanelLayout = new javax.swing.GroupLayout(miscPanel);
        miscPanel.setLayout(miscPanelLayout);
        miscPanelLayout.setHorizontalGroup(
            miscPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(miscPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(miscPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(miscPanelLayout.createSequentialGroup()
                        .addGroup(miscPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAlphaBlendByTexture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVColToAlpha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCreateVCol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMakeRootJoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMakeStrips, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(miscPanelLayout.createSequentialGroup()
                                .addComponent(btnCalcTangents)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tgtCalcUVSetLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tgtCalcUVSet)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnMakeIndexed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        miscPanelLayout.setVerticalGroup(
            miscPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(miscPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCreateVCol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVColToAlpha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlphaBlendByTexture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMakeRootJoint)
                .addGap(18, 18, 18)
                .addComponent(btnMakeStrips)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(miscPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalcTangents)
                    .addComponent(tgtCalcUVSetLabel)
                    .addComponent(tgtCalcUVSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMakeIndexed)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(namePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(translatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(miscPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(translatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(miscPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyScaleActionPerformed
		if (model != null) {
			float v = (Float) scale.getValue();
			if (v != 0 && v != 1f) {
				ModelProcessor.scaleModel(model, v);
				NGCS cs = node.getCS();
				cs.resetCameraToModel();
				cs.resetResourceBBoxByModel(model);
				cs.resetJointEditorSkeletonModel();
			}
			scale.setValue(1f);
		}
    }//GEN-LAST:event_btnApplyScaleActionPerformed

    private void btnNameSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNameSetActionPerformed
		save();
    }//GEN-LAST:event_btnNameSetActionPerformed

    private void btnApplyTranslateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyTranslateActionPerformed
		if (model != null) {
			float vx = (Float) tx.getValue();
			float vy = (Float) ty.getValue();
			float vz = (Float) tz.getValue();
			if (vx != 0 || vy != 0 || vz != 0) {
				ModelProcessor.translateModel(model, new Vec3f(vx, vy, vz));
				node.getCS().resetCameraToModel();
				tx.setValue(0f);
				ty.setValue(0f);
				tz.setValue(0f);
			}
		}
    }//GEN-LAST:event_btnApplyTranslateActionPerformed

    private void btnVColToAlphaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVColToAlphaActionPerformed
		if (model != null) {
			ModelProcessor.colorToAlpha(model);
		}
    }//GEN-LAST:event_btnVColToAlphaActionPerformed

    private void btnCreateVColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateVColActionPerformed
		if (model != null) {
			ModelProcessor.clearVCol(model);
		}
    }//GEN-LAST:event_btnCreateVColActionPerformed

    private void btnMakeRootJointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeRootJointActionPerformed
		if (model != null) {
			if (model.skeleton.getJoints().isEmpty()) {
				Joint root = new Joint();
				root.name = "Root";
				model.skeleton.addJoint(root);

				for (Mesh mesh : model.meshes) {
					mesh.hasBoneIndices = true;
					mesh.hasBoneWeights = true;
					for (Vertex vtx : mesh.vertices) {
						vtx.boneIndices.clear();
						vtx.boneIndices.add(0);
						vtx.weights.clear();
						vtx.weights.add(1f);
					}
					mesh.createAndInvalidateBuffers();
				}
			} else {
				DialogUtils.showInfoMessage(node.getCS(), "Nothing to do", "This model already has a skeleton");
			}
		}
    }//GEN-LAST:event_btnMakeRootJointActionPerformed

    private void btnMakeStripsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeStripsActionPerformed
		if (model != null) {
			ListenableList<Mesh> newMeshList = new ListenableList<>();

			for (Mesh m : model.meshes) {
				switch (m.primitiveType) {
					case QUADS:
						newMeshList.addAll(QuadstripConverter.makeQuadstrips(m));
						break;
					case TRIS:
						newMeshList.addAll(TristripConverter.makeTristrips(m));
						break;
					default:
						newMeshList.add(m);
						break;
				}
			}

			model.meshes.clear();
			for (Mesh m : newMeshList) {
				model.addMesh(m);
			}
		}
    }//GEN-LAST:event_btnMakeStripsActionPerformed

    private void btnAlphaBlendByTextureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlphaBlendByTextureActionPerformed
		if (model != null) {
			G3DResource textures = new G3DResource();
			textures.addTextures(node.getCS().getTextures());
			MaterialProcessor.setAutoAlphaBlendByTexture(new G3DResource(model), textures);
			for (Mesh mesh : model.meshes) {
				if (mesh.hasColor) {
					boolean vtxAlpha = false;
					for (Vertex vtx : mesh.vertices) {
						if (vtx.color.a != 255) {
							vtxAlpha = true;
							break;
						}
					}
					if (vtxAlpha) {
						mesh.renderLayer = 1;
						Material mat = model.getMaterialByName(mesh.materialName);
						if (mat != null) {
							MaterialProcessor.setAlphaBlend(mat);
						}
					}
				}
			}
		}
    }//GEN-LAST:event_btnAlphaBlendByTextureActionPerformed

    private void btnCalcTangentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcTangentsActionPerformed
		if (model != null) {
			int uvSet = ((Number) tgtCalcUVSet.getValue()).intValue();
			boolean needsTriangulate = false;
			boolean uvSetSometimesAbsent = false;
			boolean uvSetSupported = false;
			for (Mesh mesh : model.meshes) {
				if (mesh.primitiveType != PrimitiveType.TRIS) {
					needsTriangulate = true;
				}
				if (mesh.hasUV(uvSet)) {
					uvSetSupported = true;
				} else {
					uvSetSometimesAbsent = true;
				}
			}
			if (needsTriangulate) {
				if (!DialogUtils.showYesNoDialog(node.getCS(), "Triangulate", "Some meshes will have to be triangulated. Continue?")) {
					return;
				}
			}
			if (!uvSetSupported) {
				DialogUtils.showErrorMessage(node.getCS(), "Not applicable", "None of the model's meshes contain UV layer " + uvSet + ".");
				return;
			}
			if (uvSetSometimesAbsent) {
				if (!DialogUtils.showYesNoWarningDialog(node.getCS(), "Warning", "Some meshes do not contain UV layer " + uvSet + ". Continue anyway?")) {
					return;
				}
			}
			for (Mesh mesh : model.meshes) {
				if (needsTriangulate) {
					if (mesh.primitiveType != PrimitiveType.TRIS) {
						PrimitiveConverter.triangulate(mesh);
					}
				}
				MeshProcessor.calculateTangents(mesh, uvSet);
			}
		}
    }//GEN-LAST:event_btnCalcTangentsActionPerformed

    private void btnMakeIndexedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeIndexedActionPerformed
        if (model != null) {
			for (Mesh mesh : model.meshes) {
				VBOProcessor.makeIndexed(mesh);
			}
		}
    }//GEN-LAST:event_btnMakeIndexedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlphaBlendByTexture;
    private javax.swing.JButton btnApplyScale;
    private javax.swing.JButton btnApplyTranslate;
    private javax.swing.JButton btnCalcTangents;
    private javax.swing.JButton btnCreateVCol;
    private javax.swing.JButton btnMakeIndexed;
    private javax.swing.JButton btnMakeRootJoint;
    private javax.swing.JButton btnMakeStrips;
    private javax.swing.JButton btnNameSet;
    private javax.swing.JButton btnVColToAlpha;
    private javax.swing.JPanel miscPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JPanel namePanel;
    private javax.swing.JFormattedTextField scale;
    private javax.swing.JPanel scalePanel;
    private javax.swing.JSpinner tgtCalcUVSet;
    private javax.swing.JLabel tgtCalcUVSetLabel;
    private javax.swing.JPanel translatePanel;
    private javax.swing.JFormattedTextField tx;
    private javax.swing.JLabel txLabel;
    private javax.swing.JFormattedTextField ty;
    private javax.swing.JLabel tyLabel;
    private javax.swing.JFormattedTextField tz;
    private javax.swing.JLabel tzLabel;
    // End of variables declaration//GEN-END:variables
}
