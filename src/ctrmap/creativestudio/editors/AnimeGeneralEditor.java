package ctrmap.creativestudio.editors;

import ctrmap.creativestudio.ngcs.tree.CSNode;
import ctrmap.renderer.scene.animation.AbstractAnimation;
import xstandard.gui.components.ComponentUtils;
import xstandard.gui.components.listeners.DocumentAdapterEx;
import javax.swing.event.DocumentEvent;

public class AnimeGeneralEditor extends javax.swing.JPanel {

	/**
	 * Creates new form AnimeGeneralEditor
	 */
	public AnimeGeneralEditor() {
		initComponents();

		ComponentUtils.setNFValueClass(Float.class, anmFrameCount);
		
		anmFrameCount.getDocument().addDocumentListener(new DocumentAdapterEx() {
			@Override
			public void textChangedUpdate(DocumentEvent e) {
				if (anm != null) {
					anm.frameCount = ComponentUtils.getFloatFromDocument(anmFrameCount);
				}
			}
		});
	}

	private AbstractAnimation anm = null;
	private CSNode node;

	public void loadAnime(AbstractAnimation a, CSNode node) {
		anm = a;
		this.node = node;
		showAnm();
	}

	public void showAnm() {
		if (anm == null) {
			ComponentUtils.clearComponents(anmName, anmFrameCount, anmIsLooped);
		} else {
			anmName.loadNode(node);
			anmFrameCount.setValue(anm.frameCount);
			anmIsLooped.setSelected(anm.isLooped);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        anmNameLabel = new javax.swing.JLabel();
        anmFrameCountLabel = new javax.swing.JLabel();
        anmFrameCount = new javax.swing.JFormattedTextField();
        anmName = new ctrmap.creativestudio.editors.NameTextField();
        anmIsLooped = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("General"));

        anmNameLabel.setText("Name");

        anmFrameCountLabel.setText("Frame count");

        anmFrameCount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        anmFrameCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anmFrameCountActionPerformed(evt);
            }
        });

        anmIsLooped.setText("Loop");
        anmIsLooped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anmIsLoopedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(anmFrameCount)
                    .addComponent(anmName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anmIsLooped)
                            .addComponent(anmNameLabel)
                            .addComponent(anmFrameCountLabel))
                        .addGap(0, 176, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anmNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anmName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anmFrameCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anmFrameCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(anmIsLooped)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void anmFrameCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anmFrameCountActionPerformed
		if (anm != null) {
			anm.frameCount = (Float) anmFrameCount.getValue();
		}
    }//GEN-LAST:event_anmFrameCountActionPerformed

    private void anmIsLoopedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anmIsLoopedActionPerformed
		if (anm != null) {
			anm.isLooped = anmIsLooped.isSelected();
		}
    }//GEN-LAST:event_anmIsLoopedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField anmFrameCount;
    private javax.swing.JLabel anmFrameCountLabel;
    private javax.swing.JCheckBox anmIsLooped;
    private ctrmap.creativestudio.editors.NameTextField anmName;
    private javax.swing.JLabel anmNameLabel;
    // End of variables declaration//GEN-END:variables
}
