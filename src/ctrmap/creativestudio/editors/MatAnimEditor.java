package ctrmap.creativestudio.editors;

import ctrmap.creativestudio.ngcs.tree.CSNode;
import ctrmap.renderer.scene.animation.KeyFrame;
import ctrmap.renderer.scene.animation.material.MatAnimBoneTransform;
import ctrmap.renderer.scene.animation.material.MaterialAnimation;
import java.util.ArrayList;
import java.util.List;

public class MatAnimEditor extends javax.swing.JPanel implements IEditor {

	/**
	 * Creates new form MatAnimEditor
	 */
	public MatAnimEditor() {
		initComponents();

		saveCtrl.setCallback(this::save);
	}

	private CSNode node = null;
	private MaterialAnimation anm = null;

	private boolean loaded = false;

	@Override
	public void handleObject(Object o) {
		if (IEditor.checkIsCompatibleNG(o, MaterialAnimation.class)) {
			node = (CSNode) o;
			anm = (MaterialAnimation) node.getContent();
		} else {
			node = null;
			anm = null;
		}
		generalEditor.loadAnime(anm, node);
		loadBones();
		coordIdx.setSelectedIndex(0);
		coordTypeIdx.setSelectedIndex(0);
		boneNames.setSelectedIndex(Math.min(0, anm == null ? -1 : anm.bones.size() - 1));
		doKFLLoad();
	}

	public void loadBones() {
		loaded = false;
		boneNames.removeAllItems();

		if (anm != null) {
			for (MatAnimBoneTransform bt : anm.bones) {
				boneNames.addItem(bt.name);
			}
		}
		loaded = true;
	}

	@Override
	public void save() {

	}

	public void doKFLLoad() {
		int uv = coordIdx.getSelectedIndex();

		List<KeyFrame> kfl = new ArrayList<>();

		if (anm != null && !anm.bones.isEmpty()) {
			MatAnimBoneTransform bt = anm.bones.get(boneNames.getSelectedIndex());
			texNames.removeAllItems();
			for (String tn : bt.textureNames){
				texNames.addItem(tn);
			}
			
			switch (coordTypeIdx.getSelectedIndex()) {
				case 0:
					kfl = bt.mtx[uv];
					break;
				case 1:
					kfl = bt.mty[uv];
					break;
				case 2:
					kfl = bt.msx[uv];
					break;
				case 3:
					kfl = bt.msy[uv];
					break;
				case 4:
					kfl = bt.mrot[uv];
					break;
				case 5:
					kfl = bt.textureIndices[uv];
					break;
			}
		}

		kflEditor.loadKFL(kfl);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generalEditor = new ctrmap.creativestudio.editors.AnimeGeneralEditor();
        jPanel1 = new javax.swing.JPanel();
        coordLabel = new javax.swing.JLabel();
        coordIdx = new javax.swing.JComboBox<>();
        coordTypeLabel = new javax.swing.JLabel();
        coordTypeIdx = new javax.swing.JComboBox<>();
        kflEditor = new ctrmap.creativestudio.editors.KFLEditor();
        jLabel1 = new javax.swing.JLabel();
        boneNames = new javax.swing.JComboBox<>();
        btnRemoveMat = new javax.swing.JButton();
        btnAddMat = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        texNames = new javax.swing.JComboBox<>();
        saveCtrl = new ctrmap.creativestudio.editors.SaveControlPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Elements"));

        coordLabel.setText("Target Coordinator");

        coordIdx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        coordIdx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordIdxActionPerformed(evt);
            }
        });

        coordTypeLabel.setText("Target coordinates");

        coordTypeIdx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Translation X", "Translation Y", "Scale X", "Scale Y", "Rotation", "Texture index" }));
        coordTypeIdx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordTypeIdxActionPerformed(evt);
            }
        });

        jLabel1.setText("Target material name");

        boneNames.setEditable(true);
        boneNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boneNamesActionPerformed(evt);
            }
        });

        btnRemoveMat.setText("-");
        btnRemoveMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveMatActionPerformed(evt);
            }
        });

        btnAddMat.setText("+");
        btnAddMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMatActionPerformed(evt);
            }
        });

        jLabel2.setText("Texture names");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kflEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(coordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(coordIdx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(49, 49, 49)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(coordTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(coordTypeIdx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel1)
                                    .addComponent(boneNames, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoveMat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddMat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(texNames, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boneNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveMat)
                    .addComponent(btnAddMat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordLabel)
                    .addComponent(coordTypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordIdx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coordTypeIdx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kflEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(texNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generalEditor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveCtrl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generalEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveCtrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	int lastBoneIdx = -1;

    private void boneNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boneNamesActionPerformed
		if (loaded) {
			int idx = boneNames.getSelectedIndex();
			if (idx != lastBoneIdx && idx != -1) {
				doKFLLoad();
			}

			if (idx != -1 || (anm != null && anm.bones.isEmpty())) {
				lastBoneIdx = idx;
			} else {
				kflEditor.loadKFL(null);
			}

			if (anm != null && lastBoneIdx != -1) {
				String oldName = anm.bones.get(lastBoneIdx).name;
				String newName = ((String) boneNames.getEditor().getItem()).replace("\n", "");
				if (!newName.equals(oldName)) {
					anm.bones.get(lastBoneIdx).setName(newName);
					loadBones();
					boneNames.setSelectedIndex(lastBoneIdx);
					doKFLLoad();
				}
			}
		}
    }//GEN-LAST:event_boneNamesActionPerformed

    private void coordIdxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordIdxActionPerformed
		doKFLLoad();
    }//GEN-LAST:event_coordIdxActionPerformed

    private void coordTypeIdxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordTypeIdxActionPerformed
		doKFLLoad();
    }//GEN-LAST:event_coordTypeIdxActionPerformed

    private void btnRemoveMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveMatActionPerformed
		if (loaded && anm != null){
			int idx = lastBoneIdx;
			anm.bones.remove(idx);
			loadBones();
			if (idx >= anm.bones.size()){
				idx--;
			}
			boneNames.setSelectedIndex(idx);
			doKFLLoad();
		}
    }//GEN-LAST:event_btnRemoveMatActionPerformed

    private void btnAddMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMatActionPerformed
		if (loaded && anm != null){
			MatAnimBoneTransform bt = new MatAnimBoneTransform();
			bt.name = "NewMaterialTarget";
			anm.bones.add(bt);
			loadBones();
			boneNames.setSelectedIndex(boneNames.getItemCount() - 1);
			doKFLLoad();
		}
    }//GEN-LAST:event_btnAddMatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boneNames;
    private javax.swing.JButton btnAddMat;
    private javax.swing.JButton btnRemoveMat;
    private javax.swing.JComboBox<String> coordIdx;
    private javax.swing.JLabel coordLabel;
    private javax.swing.JComboBox<String> coordTypeIdx;
    private javax.swing.JLabel coordTypeLabel;
    private ctrmap.creativestudio.editors.AnimeGeneralEditor generalEditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private ctrmap.creativestudio.editors.KFLEditor kflEditor;
    private ctrmap.creativestudio.editors.SaveControlPanel saveCtrl;
    private javax.swing.JComboBox<String> texNames;
    // End of variables declaration//GEN-END:variables
}
