package ctrmap.util.gui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Point;
import java.awt.image.BufferedImage;

public class BufferedImagePreview extends javax.swing.JPanel {

	/**
	 * Creates new form TexturePreview
	 */
	public BufferedImagePreview() {
		initComponents();
	}

	private Dimension currentPreviewDimensions = new Dimension(150, 150);
	private BufferedImage currentImageNoScale = null;

	private Image currentImageScaled = null;

	public void loadImage(BufferedImage bi) {
		if (bi == null) {
			//texLabel.setIcon(null);
			currentImageScaled = null;
		} else {
			float aspect = bi.getWidth() / (float) bi.getHeight();
			float desiredAspect = currentPreviewDimensions.width / (float) currentPreviewDimensions.height;
			if (aspect > desiredAspect) {
				//System.out.println(Math.max(1, (int)(currentPreviewDimensions.width / (float)bi.getWidth() * bi.getHeight())));
				/*texLabel.setIcon(
					new ImageIcon(*/
				currentImageScaled = bi.getScaledInstance(
					Math.max(1, currentPreviewDimensions.width),
					Math.max(1, (int) (currentPreviewDimensions.width / (float) bi.getWidth() * bi.getHeight())),
					Image.SCALE_SMOOTH
				);
				//);
			} else {
				//System.out.println(Math.max(1, (int)(currentPreviewDimensions.height / (float)bi.getHeight()* bi.getWidth())));
				/*texLabel.setIcon(
					new ImageIcon(*/
				currentImageScaled = bi.getScaledInstance(
					Math.max(1, (int) (currentPreviewDimensions.height / (float) bi.getHeight() * bi.getWidth())),
					Math.max(1, currentPreviewDimensions.height),
					Image.SCALE_SMOOTH
				);
				//);*/
			}
			/*if (bi.getWidth() > bi.getHeight()) {
				texLabel.setIcon(new ImageIcon(bi.getScaledInstance(Math.max(1, currentPreviewDimensions.width), Math.max(1, (int) ((bi.getHeight() / (float) bi.getWidth()) * currentPreviewDimensions.height)), Image.SCALE_SMOOTH)));
			} else {
				texLabel.setIcon(new ImageIcon(bi.getScaledInstance((int) ((bi.getWidth() / (float) bi.getHeight()) * currentPreviewDimensions.width), currentPreviewDimensions.height, Image.SCALE_SMOOTH)));
			}*/
		}
		currentImageNoScale = bi;
		repaint();
	}
	
	@Override
	public void addNotify() {
		super.addNotify();
		formComponentResized(null);
	}
	
	public Dimension getSizeWithoutInsets() {
		Dimension size = getSize();
		Insets ins = getInsets();
		size.width -= (ins.left + ins.right);
		size.height -= (ins.top + ins.bottom);
		return size;
	}
	
	public Point getInsetsOffset() {
		Insets ins = getInsets();
		return new Point(ins.left, ins.top);
	}

	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);

		if (currentImageScaled != null) {
			Dimension dim = getSizeWithoutInsets();
			
			Point start = getInsetsOffset();

			int imgX = (dim.width >> 1) - (currentImageScaled.getWidth(null) >> 1) + start.x; 
			int imgY = (dim.height >> 1) - (currentImageScaled.getHeight(null) >> 1) + start.y;
			g.drawImage(currentImageScaled, imgX, imgY, null);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
		Dimension size = getSizeWithoutInsets();
		if (size.width == 0 || size.height == 0) {
			return;
		}
		currentPreviewDimensions = size;
		loadImage(currentImageNoScale);
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
