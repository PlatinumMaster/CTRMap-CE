package ctrmap.util.tools.cont;

import ctrmap.formats.pokemon.containers.DefaultGamefreakContainer;
import ctrmap.formats.pokemon.containers.GFContainer;
import xstandard.fs.FSFile;
import xstandard.gui.DialogUtils;
import xstandard.gui.file.XFileDialog;
import xstandard.gui.file.ExtensionFilter;

public class NewContainerDialog extends javax.swing.JDialog {

	private GFContainer returnValue = null;
	private AGFCContentIdentifier contentId;
	
	public NewContainerDialog(ContainerUtil parent, boolean modal) {
		super(parent, modal);
		initComponents();
		contentId = parent.getContentIdentifier();
	}

	private void setPaddingEnabled(){
		btnUsePadding.setEnabled(!btnAutoPadding.isSelected());
	}
	
	public GFContainer getResult(){
		return returnValue;
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        twoCCLabel = new javax.swing.JLabel();
        twoCCNotice = new javax.swing.JLabel();
        twoCC = new javax.swing.JTextField();
        fileCountLabel = new javax.swing.JLabel();
        fileCount = new javax.swing.JSpinner();
        paddingPanel = new javax.swing.JPanel();
        btnUsePadding = new javax.swing.JCheckBox();
        btnAutoPadding = new javax.swing.JCheckBox();
        btnMakeCont = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AGFC Creator");

        headerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Header"));

        twoCCLabel.setText("Two character signature");

        twoCCNotice.setForeground(new java.awt.Color(102, 102, 102));
        twoCCNotice.setText("(Characters beyond the second one will be truncated)");

        twoCC.setText("TM");

        fileCountLabel.setText("File count");

        fileCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 65535, 1));

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(twoCCLabel)
                            .addComponent(fileCountLabel))
                        .addGap(18, 18, 18)
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(twoCC)
                            .addComponent(fileCount)))
                    .addComponent(twoCCNotice))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(twoCCLabel)
                    .addComponent(twoCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileCountLabel)
                    .addComponent(fileCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(twoCCNotice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paddingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Content padding"));

        btnUsePadding.setText("Use padding");
        btnUsePadding.setEnabled(false);

        btnAutoPadding.setSelected(true);
        btnAutoPadding.setText("Autodetect padding by signature");
        btnAutoPadding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoPaddingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paddingPanelLayout = new javax.swing.GroupLayout(paddingPanel);
        paddingPanel.setLayout(paddingPanelLayout);
        paddingPanelLayout.setHorizontalGroup(
            paddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paddingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUsePadding)
                    .addComponent(btnAutoPadding))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paddingPanelLayout.setVerticalGroup(
            paddingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paddingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAutoPadding)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUsePadding)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnMakeCont.setText("Create");
        btnMakeCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeContActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paddingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMakeCont)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paddingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMakeCont)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAutoPaddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoPaddingActionPerformed
        setPaddingEnabled();
    }//GEN-LAST:event_btnAutoPaddingActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
		dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnMakeContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeContActionPerformed
		String magic = twoCC.getText();
		if (magic.length() < 2){
			DialogUtils.showErrorMessage(this, "Invalid signature", "The signature has to be a two-character string.");
			return;
		}
		magic = magic.substring(0, 2);
		magic = magic.toUpperCase();
		int fcount = (Integer)fileCount.getValue();
		FSFile target = XFileDialog.openSaveFileDialog("Select a target file for the container", new ExtensionFilter(magic + " containers", "*." + magic));
		if (target != null){
			DefaultGamefreakContainer c = new DefaultGamefreakContainer(target, magic, 0);
			if (btnAutoPadding.isSelected()){
				GFContainer abstractC = contentId.identifyContainer(target);
				abstractC.storeFile(fcount - 1, new byte[0]);
				returnValue = abstractC;
			}
			else {
				boolean usePadding = btnUsePadding.isSelected();
				c.setPaddingExplicit(usePadding);
				c.storeFile(fcount - 1, new byte[0]);
				returnValue = c;
			}
			dispose();
		}
    }//GEN-LAST:event_btnMakeContActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox btnAutoPadding;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnMakeCont;
    private javax.swing.JCheckBox btnUsePadding;
    private javax.swing.JSpinner fileCount;
    private javax.swing.JLabel fileCountLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel paddingPanel;
    private javax.swing.JTextField twoCC;
    private javax.swing.JLabel twoCCLabel;
    private javax.swing.JLabel twoCCNotice;
    // End of variables declaration//GEN-END:variables
}
