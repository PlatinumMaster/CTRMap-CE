package ctrmap.util.tools;

import ctrmap.Launc;
import ctrmap.util.gui.PluginManagementPanel;
import java.util.function.Consumer;
import rtldr.JAbstractPluginDatabase;
import rtldr.JGlobalExtensionDB;
import xstandard.gui.components.ComponentUtils;

public class GlobalExtensionManager extends javax.swing.JFrame {

	public static final Launc.SubprocessStarter STARTER_FROM_LAUNCHER = new Launc.SubprocessStarter() {
		@Override
		public boolean start() {
			GlobalExtensionManager mgr = new GlobalExtensionManager();
			mgr.setDisposeCallback((t) -> {
				Launc.returnToLauncher();
			});
			mgr.setVisible(true);
			return true;
		}
	};

	private Consumer<GlobalExtensionManager> disposeCallback;
	private int pluginCount = 0;

	public GlobalExtensionManager() {
		initComponents();
		setLocationRelativeTo(null);
		innerPanel.setListener(new PluginManagementPanel.Listener() {
			@Override
			public void onPluginAdded(JAbstractPluginDatabase.PluginEntry plugin) {
				pluginCount++;
				setPluginCountLabel(pluginCount);
			}

			@Override
			public void onPluginRemoved(JAbstractPluginDatabase.PluginEntry plugin) {
				pluginCount--;
				setPluginCountLabel(pluginCount);
			}
		});
		innerPanel.setPluginDB(JGlobalExtensionDB.getInstance());
	}

	private void setPluginCountLabel(int value) {
		pluginCountLabel.setText("(" + value + " installed)");
	}

	public void setDisposeCallback(Consumer<GlobalExtensionManager> callback) {
		this.disposeCallback = callback;
	}
	
	@Override
	public void setVisible(boolean value) {
		if (value) {
			
		}
		super.setVisible(value);
	}

	@Override
	public void dispose() {
		super.dispose();
		if (disposeCallback != null) {
			disposeCallback.accept(this);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
	 * code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        innerPanel = new ctrmap.util.gui.PluginManagementPanel();
        pluginTitle = new javax.swing.JLabel();
        pluginCountLabel = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Global plugin management");

        pluginTitle.setText("Plug-ins:");

        pluginCountLabel.setText("(0 installed)");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(innerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(pluginTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pluginCountLabel)
                        .addGap(0, 294, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pluginTitle)
                    .addComponent(pluginCountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(innerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		ComponentUtils.setSystemNativeLookAndFeel();

		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new GlobalExtensionManager().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private ctrmap.util.gui.PluginManagementPanel innerPanel;
    private javax.swing.JLabel pluginCountLabel;
    private javax.swing.JLabel pluginTitle;
    // End of variables declaration//GEN-END:variables
}
