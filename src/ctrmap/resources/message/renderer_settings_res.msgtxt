renderer_desc:The rendering backend to use for both Mission Control and CTRMap.\n\nHouston (GL2): The default rendering backend compatible with the vast majority of GPUs out there. The very few materials that use stencil tests will not render correctly because of OpenGL 2.0 framebuffer texture limitations. \n\nHouston (GL2/Ubershaders): A fork of the GL2 Houston which uses a unified branching ubershader instead of generating shaders per-material. Minimizes shader compilation stutter, but requires a beefy GPU. Despite rendering using the OpenGL 2.0 API, the ubershader requires at least OpenGL 3.0 shading language capabilities.\n\nHouston (GL4): The most optimized and most accurate rendering backend. If your GPU supports at least OpenGL 4.0, it is recommended that you use this renderer.
clipping_desc:Declares the renderer's clip planes.\nFragments in front of the near plane and behind the far plane will not be drawn. Lower near plane values may introduce Z-fighting.
framecap_desc:Specifies the renderer's FPS cap.\nThis only affects camera motion and input unless animations are interpolated.
fov_desc:Sets the default FOV of the CTRMap 3D viewport. In-game FOV is usually set externally and won't respect this setting.
anime_speed_desc:Controls the in-game animation tick rate.
anime_interpolate_m_desc:Enables interpolation for Material animations.\nWhen interpolated, the animations run at the same frame rate as the main window, however, various glitches may occur.
anime_interpolate_s_desc:Enables interpolation for Skeletal animations.\nIn most cases, this is a safe enhancement, however, certain animations with hacky rotation values will glitch out at >30FPS framerates.
anime_interpolate_opt_desc:Optimizes loaded animations to hugely reduce the amount of glitches when interpolated. In most cases, this should be checked.
native_texture_formats_desc:When enabled, the renderer uses GPU-native RGB565, RGB5551, luminance and alpha formats for more efficient VRAM usage.\nOtherwise, textures are coded as RGB(A)8 for maximum compatibility.\n\nThis is a safe enhancement for the vast majority of GPUs.
back_face_culling_desc:Disables back face culling on all objects.\nEnhances the overall map editing experience, but slightly inhibits performance.
shader_gc_desc:Enables automatically releasing GPU shaders when they are not in use. Lowers VRAM usage at the cost of more shader compilation stutter.